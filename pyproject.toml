[project]
name = "physics"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "altair>=5.5.0",
    "numpy>=2.3.3",
    "pandas>=2.3.3",
    "plotly>=6.3.1",
    "scipy>=1.16.1",
    "streamlit>=1.50.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.3",
    "watchdog>=6.0.0",
]


[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "A", # flake8-builtins (builtin name shadowing)
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B", # flake8-bugbear (common bug causes)
    "C4", # flake8-comprehensions
    "COM", # flake8-commas
    "D", # pydocstyle
    "DTZ", # flake8-datetimez
    "E", # pycodestyle
    "EXE", # flake8-executable
    "F", # pyflakes
    "FA", # flake8-future-annotations
    "FAST", # FastAPI
    "FBT", # flake8-boolean-trap (disallow boolean positional arguments)
    "FLY", # pyflint
    "FURB", # refurb (use new language features)
    "G", # flake8-logging-format
    "I", # isort (imports)
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    "N", # pep8-naming
    "PERF", # perflint
    "PIE", # flake8-pie
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # ruff-specific
    "S", # flake8-bandit (security)
    "SIM", # flake8-simpify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T100", # flake8-debugger
    "TRY", # tryceratops
    "UP", # pyupgrade (disallow deprecated language features)
    "W", # pycodestyle
    "YTT", # flake8-2020
]
ignore = [
    "COM812", # redundant because of ruff format
    "D1", # allow undocumented entities
    "D212", # prefer D213 instead (google doc style override)
    "D405", # section names don't have to be capitalized
    "PLR09", # disable complexity warnings
    "PLR2004", # allow magic values
    "TRY003", # allow long messages outside exception classes
    "D415", # allow docstrings not to end with a period
]
extend-select = [
    "D213", # multi-line docstring summary should start at the second line
]
fixable = ["ALL"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "S101", # allow asserting
    "S311", # allow random
    "ANN", # allow missing annotations
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
line-ending = "lf"
